!function(){"use strict";class t{constructor(t){this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(t){"Escape"===t.key&&this.close()}setEventListeners(){this._popup.addEventListener("mousedown",(t=>{(t.target.classList.contains("modal_opened")||t.target.classList.contains("modal__close"))&&this.close()}))}}class e extends t{constructor(t,e){super(t),this._handleFormSubmit=e,this._form=this._popup.querySelector(".modal__form"),this._inputs=this._form.querySelectorAll(".modal__input"),this._submitButton=this._form.querySelector(".modal__button")}_getInputValues(){const t={};return this._inputs.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(t=>{t.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._form.reset()}))}getForm(){return this._form}resetForm(){this._form.reset()}setInputValues(t){this._inputs.forEach((e=>{e.value=t[e.name]}))}}class s{constructor(t,e,s){this._name=t.name,this._link=t.link,this._cardSelector=e,this._handleImageClick=s,this._element=null,this._cardImage=null,this._cardTitle=null,this._likeButton=null,this._deleteButton=null}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._likeButton.addEventListener("click",(()=>this._handleLikeClick())),this._deleteButton.addEventListener("click",(()=>this._handleDeleteClick())),this._cardImage.addEventListener("click",(()=>this._handleImageClick(this._name,this._link)))}_handleLikeClick(){this._likeButton.classList.toggle("card__like-button_active")}_handleDeleteClick(){this._element.remove(),this._element=null}generateCard(){return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".card__image"),this._cardTitle=this._element.querySelector(".card__title"),this._likeButton=this._element.querySelector(".card__like-button"),this._deleteButton=this._element.querySelector(".card__delete-button"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this._setEventListeners(),this._element}}class n{constructor(t,e){this._settings=t,this._formElement=e,this._inputList=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),this._buttonElement=this._formElement.querySelector(this._settings.submitButtonSelector),this._errorElements=this._inputList.reduce(((t,e)=>(t[e.id]=this._formElement.querySelector(`#${e.id}-error`),t)),{})}_showInputError(t,e){const s=this._errorElements[t.id];t.classList.add(this._settings.inputErrorClass),s.textContent=e,s.classList.add(this._settings.errorClass)}_hideInputError(t){const e=this._errorElements[t.id];t.classList.remove(this._settings.inputErrorClass),e.classList.remove(this._settings.errorClass),e.textContent=""}_checkInputValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}_hasInvalidInput(){return this._inputList.some((t=>!t.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():(this._buttonElement.classList.remove(this._settings.inactiveButtonClass),this._buttonElement.disabled=!1)}disableButton(){this._buttonElement.classList.add(this._settings.inactiveButtonClass),this._buttonElement.disabled=!0}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this._toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputList.forEach(this._hideInputError.bind(this))}}const i={},o=document.querySelector("#profile__edit-button"),r=document.querySelector(".profile__add-button"),a=(document.querySelector(".profile__title"),document.querySelector(".profile__description"),new e("#profile__edit_modal",(function(t){_.setUserInfo({name:t.title,job:t.description}),a.close()}))),l=new e("#card__edit_modal",(function(t){const e=u({name:t.title,link:t.url});d.addItem(e),l.close(),i["card-form"].disableButton()})),c=new class extends t{constructor(t){super(t),this._image=this._popup.querySelector(".modal__image"),this._caption=this._popup.querySelector(".modal__caption")}open(t){let{name:e,link:s}=t;this._image.src=s,this._image.alt=e,this._caption.textContent=e,super.open()}}("#image_modal"),_=new class{constructor(t){let{nameSelector:e,jobSelector:s}=t;this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(t){let{name:e,job:s}=t;this._nameElement.textContent=e,this._jobElement.textContent=s}}({nameSelector:".profile__title",jobSelector:".profile__description"});function u(t){return new s(t,"#card__template",m).generateCard()}function m(t,e){c.open({name:t,link:e})}const d=new class{constructor(t,e){let{items:s,renderer:n}=t;this._items=s,this._renderer=n,this._container=document.querySelector(e)}renderItems(){this._items.forEach((t=>{this._renderer(t)}))}addItem(t){this._container.prepend(t)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:t=>{const e=u(t);d.addItem(e)}},".cards__list");var h;o.addEventListener("click",(function(){const t=_.getUserInfo();a.setInputValues({title:t.name,description:t.job}),i["profile-form"].resetValidation(),a.open()})),r.addEventListener("click",(function(){l.open()})),a.setEventListeners(),l.setEventListeners(),c.setEventListeners(),h={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button_save",inactiveButtonClass:"modal__button_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},Array.from(document.querySelectorAll(h.formSelector)).forEach((t=>{const e=new n(h,t),s=t.getAttribute("name");i[s]=e,e.enableValidation()})),d.renderItems()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,