!function(){"use strict";class e{constructor(e,t){let{data:s,handleCardClick:r,handleDeleteClick:n,handleLikeClick:i,userId:o}=e;this._name=s.name,this._link=s.link,this._likes=s.likes||[],this._id=s._id,this._cardId=s._id,this._ownerId=s.owner?s.owner._id:null,this._userId=o,this._handleCardClick=r,this._handleDeleteClick=n,this._handleLikeClick=i,this._templateSelector=t}_getTemplate(){return document.querySelector(this._templateSelector).content.querySelector(".card").cloneNode(!0)}generateCard(){this._element=this._getTemplate(),this._setEventListeners();const e=this._element.querySelector(".card__image"),t=this._element.querySelector(".card__title");return this._likeButton=this._element.querySelector(".card__like-button"),this._likeCount=this._element.querySelector(".card__like-count"),e&&(e.src=this._link,e.alt=this._name),t&&(t.textContent=this._name),this._renderLikes(),this._element}_setEventListeners(){const e=this._element.querySelector(".card__image"),t=this._element.querySelector(".card__delete-button");this._likeButton=this._element.querySelector(".card__like-button"),e&&e.addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)})),t&&t.addEventListener("click",(()=>{this._handleDeleteClick(this._id)})),this._likeButton&&this._likeButton.addEventListener("click",(()=>{this._handleLikeClick(this._id,!this.isLiked())}))}_renderLikes(){const e=this._element.querySelector(".card__like-count"),t=this._element.querySelector(".card__like-button");e&&(e.textContent=this._likes.length),t&&(this.isLiked()?t.classList.add("card__like-button_active"):t.classList.remove("card__like-button_active"))}isLiked(){return this._likes.some((e=>e._id===this._userId))}updateLikes(e){this._likes=e,this._renderLikes()}removeCard(){this._element&&(this._element.remove(),this._element=null)}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}_showInputError(e,t){const s=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._buttonElement&&(this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1))}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}}class s{constructor(e,t){let{items:s,renderer:r}=e;this._items=Array.isArray(s)?s:[],this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{e&&"object"==typeof e?this._renderer(e):console.error("Invalid item in Section:",e)}))}addItem(e){e&&this._container.prepend(e)}}class r{constructor(e){this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popup.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__close"))&&this.close()}))}}class n extends r{constructor(e,t){super(e),this._handleFormSubmit=t,this._form=this._popup.querySelector(".modal__form"),this._inputs=this._form.querySelectorAll(".modal__input"),this._submitButton=this._form.querySelector(".modal__button"),this._submitButton.dataset.originalText=this._submitButton.textContent}_getInputValues(){const e={};return this._inputs.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}close(){super.close(),this._form.reset()}setInputValues(e){this._inputs.forEach((t=>{t.value=e[t.name]}))}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";e?(this._submitButton.textContent=t,this._submitButton.disabled=!0):(this._submitButton.textContent=this._submitButton.dataset.originalText,this._submitButton.disabled=!1)}}const i=new class extends r{constructor(e,t){super(e),this._handleConfirm=t,this._form=this._popup.querySelector(".modal__form")}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleConfirm(this._cardId)}))}open(e){this._cardId=e,super.open()}}("#delete-card-modal",(function(){const e=i._cardId;o.deleteCard(e).then((()=>{document.querySelector(`[data-card-id="${e}"]`).remove(),i.close()})).catch((e=>console.error(e)))})),o=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponse)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}setUserInfo(e){let{name:t,about:s}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})}).then(this._checkResponse)}addCard(e){let{name:t,link:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}addLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}removeLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}updateAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"5db111ac-010a-455f-8b65-a9484d0efcee","Content-Type":"application/json"}}),a=new class{constructor(e){let{nameSelector:t,jobSelector:s,avatarSelector:r}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s),this._avatarElement=document.querySelector(r),this._userId=null}getUserInfo(){return{name:this._nameElement.textContent,about:this._jobElement.textContent,avatar:this._avatarElement.src,_id:this._userId}}setUserInfo(e){let{name:t,about:s,avatar:r,_id:n}=e;t&&(this._nameElement.textContent=t),s&&(this._jobElement.textContent=s),r&&(this._avatarElement.src=r),n&&(this._userId=n)}getUserId(){return this._userId}}({nameSelector:".profile__title",jobSelector:".profile__description",avatarSelector:".profile__image"}),l=new class extends r{constructor(e){super(e),this._image=this._popup.querySelector(".modal__image"),this._caption=this._popup.querySelector(".modal__caption")}open(e,t){this._image.src=t,this._image.alt=e,this._caption.textContent=e,super.open()}}("#image_modal"),d=new n("#profile__edit_modal",(function(e){d.renderLoading(!0),o.setUserInfo({name:e.name,about:e.about}).then((e=>{a.setUserInfo(e),d.close()})).catch((e=>console.error(e))).finally((()=>d.renderLoading(!1)))})),h=new n("#card__edit_modal",(function(e){h.renderLoading(!0),o.addCard({name:e.title,link:e.url}).then((e=>{const t=u(e);_.addItem(t),h.close()})).catch((e=>console.error(e))).finally((()=>h.renderLoading(!1)))})),c=new n("#avatar-edit-modal",(function(e){c.renderLoading(!0),o.updateAvatar(e.avatar).then((e=>{a.setUserInfo(e),c.close()})).catch((e=>console.error(e))).finally((()=>c.renderLoading(!1)))}));let _;function u(t){const s=new e({data:t,handleCardClick:(e,t)=>{l.open(e,t)},handleDeleteClick:e=>{i.open(e)},handleLikeClick:(e,t)=>{(t?o.removeLike.bind(o):o.addLike.bind(o))(e).then((e=>{s.updateLikes(e.likes)})).catch((e=>console.error(e)))},userId:a.getUserId()},"#card__template");return s.generateCard()}Promise.all([o.getUserInfo(),o.getInitialCards()]).then((e=>{let[t,r]=e;a.setUserInfo(t),_=new s({items:r,renderer:e=>{const t=u(e);_.addItem(t)}},".cards__list"),_.renderItems()})).catch((e=>console.error(e))),document.querySelector(".profile__edit-button").addEventListener("click",(()=>{const{name:e,about:t}=a.getUserInfo();d.setInputValues({name:e,about:t}),d.open()})),document.querySelector(".profile__add-button").addEventListener("click",(()=>{h.open()})),document.querySelector(".profile__image").addEventListener("click",(()=>{c.open()})),document.querySelector(".profile__image-container").addEventListener("click",(()=>{c.open()}));const m={};var p;p={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button_save",inactiveButtonClass:"modal__button_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},Array.from(document.querySelectorAll(p.formSelector)).forEach((e=>{const s=new t(p,e),r=e.getAttribute("name");m[r]=s,s.enableValidation()})),l.setEventListeners(),d.setEventListeners(),h.setEventListeners(),c.setEventListeners(),i.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,